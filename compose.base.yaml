services:

  assistant:
    build:
      context: .
      dockerfile: services/assistant/Dockerfile
    restart: always
    volumes:
      - ./common_packages:/common_packages
      - assistant_db_data:/data
    networks:
      - assistant-network

  intent_catcher:
    build:
      context: .
      dockerfile: services/intent_catcher/Dockerfile
    restart: always
    volumes:
      - $HOME/.cache/huggingface/hub/:/root/.cache/huggingface/hub/
      - ./common_packages:/common_packages
      - intent_catcher_data:/data
    environment:
      CUDA_VISIBLE_DEVICES: 0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ '0' ]
              capabilities: [ gpu ]
    networks:
      - assistant-network

  llm_vicuna13b:
    build:
      context: .
      dockerfile: services/llm_vicuna13b/Dockerfile
    restart: always
    volumes:
      - $HOME/.cache/huggingface/hub/:/root/.cache/huggingface/hub/
      - ./common_packages:/common_packages
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ '1' ]
              capabilities: [ gpu ]
    networks:
      - assistant-network

  planner:
    build:
      context: .
      dockerfile: services/planner/Dockerfile
    restart: always
    volumes:
      - ./common_packages:/common_packages
    networks:
      - assistant-network

  llm_llama3:
    build:
      context: .
      dockerfile: services/llm_llama3/Dockerfile
    volumes:
      - $HOME/.cache/huggingface/hub/:/root/.cache/huggingface/hub/
      - ./common_packages:/common_packages
    environment:
      CUDA_VISIBLE_DEVICES: 0
      REPO_ID: "bartowski/Meta-Llama-3.1-8B-Instruct-GGUF"
      FILENAME: "Meta-Llama-3.1-8B-Instruct-Q8_0.gguf"
      N_GPU_LAYERS: -1
      N_CTX: 8192
      TEMPERATURE: 0.6
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ '0' ]
              capabilities: [ gpu ]
    networks:
      - assistant-network

  machine_translation:
    build:
      context: .
      dockerfile: services/machine_translation/Dockerfile
    restart: always
    volumes:
      - ./common_packages:/common_packages
      - $HOME/.cache/huggingface/hub/:/root/.cache/huggingface/hub/
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ '0' ]
              capabilities: [ gpu ]
    networks:
      - assistant-network

  gigachat:
    build:
      context: .
      dockerfile: services/gigachat/Dockerfile
    volumes:
      - ./common_packages:/common_packages
    networks:
      - assistant-network

  ingress:
    build:
      context: .
      dockerfile: services/ingress/Dockerfile
    volumes:
      - ./common_packages:/common_packages
    networks:
      - assistant-network

  seg_and_track:
    build:
      context: .
      dockerfile: services/seg_and_track/Dockerfile
    volumes:
      - ./common_packages:/common_packages
      - file_storage_data:/data
    networks:
      - assistant-network

  file_browser:
    build:
      context: .
      dockerfile: services/file_browser/Dockerfile
    volumes:
      - file_storage_data:/data
    networks:
      - assistant-network

  file_uploader:
    build:
      context: .
      dockerfile: services/file_uploader/Dockerfile
    restart: always
    volumes:
      - file_storage_data:/data
      - ./common_packages:/common_packages
    networks:
      - assistant-network

  auto_sat:
    build:
      context: .
      dockerfile: services/auto_sat/Dockerfile
    restart: always
    volumes:
      - file_storage_data:/data
      - ./common_packages:/common_packages
    networks:
      - assistant-network

  ssml_tagger:
    build:
      context: .
      dockerfile: services/ssml_tagger/Dockerfile
    restart: always
    volumes:
      - ./common_packages:/common_packages
      - ssml_tagger_data:/data
    networks:
      - assistant-network

networks:
  assistant-network:
    driver: bridge

volumes:
  intent_catcher_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: volumes/intent_catcher
  ssml_tagger_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: volumes/ssml_tagger
  file_storage_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: volumes/file_storage
  assistant_db_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: volumes/assistant_db